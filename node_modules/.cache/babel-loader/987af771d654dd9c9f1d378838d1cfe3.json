{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ATLANTA\\\\Desktop\\\\udemy-Max\\\\FoodOrder\\\\src\\\\store\\\\CartContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport CartContext from \"./cart-contex\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const existingCartIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCart = state.items[existingCartIndex];\n    let updatedItem;\n    let updatedItems;\n    const newTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n\n    if (existingCart) {\n      updatedItem = { ...existingCart,\n        amount: existingCart.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: newTotalAmount\n    };\n  }\n\n  if (action.type === \"REMOVE\") {\n    const existingCartIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingItem = state.items[existingCartIndex];\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\n    let updatedItems;\n\n    if (existingItem.amount === 1) {}\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/ATLANTA/Desktop/udemy-Max/FoodOrder/src/store/CartContext.js"],"names":["React","useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","existingCartIndex","findIndex","item","id","existingCart","updatedItem","updatedItems","newTotalAmount","price","amount","concat","existingItem","updatedTotalAmount","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from \"react\";\r\nimport CartContext from \"./cart-contex\";\r\n\r\nconst defaultCartState = {\r\n  items: [],\r\n  totalAmount: 0,\r\n};\r\n\r\nconst cartReducer = (state, action) => {\r\n  if (action.type === \"ADD\") {\r\n    const existingCartIndex = state.items.findIndex(\r\n      (item) => item.id === action.item.id\r\n    );\r\n    const existingCart = state.items[existingCartIndex];\r\n    let updatedItem;\r\n    let updatedItems;\r\n    const newTotalAmount =\r\n    state.totalAmount + action.item.price * action.item.amount;\r\n    if (existingCart) {\r\n      updatedItem = {\r\n        ...existingCart,\r\n        amount: existingCart.amount + action.item.amount,\r\n      };\r\n      updatedItems = [...state.items];\r\n      updatedItems[existingCartIndex] = updatedItem;\r\n    } else {\r\n      updatedItems = state.items.concat(action.item);\r\n    }\r\n\r\n    \r\n    return {\r\n      items: updatedItems,\r\n      totalAmount: newTotalAmount,\r\n    };\r\n  }\r\n  if (action.type === \"REMOVE\"){\r\n   \r\n    const existingCartIndex = state.items.findIndex(\r\n      item => item.id === action.item.id\r\n    )\r\n    const existingItem = state.items[existingCartIndex]\r\n    const updatedTotalAmount = state.totalAmount -existingItem.price;\r\n    let updatedItems;\r\n    if (existingItem.amount ===1){\r\n      \r\n    }\r\n  }\r\n  return defaultCartState;\r\n};\r\n\r\nconst CartProvider = (props) => {\r\n  const [cartState, dispatchCartAction] = useReducer(\r\n    cartReducer,\r\n    defaultCartState\r\n  );\r\n  const addItemToCartHandler = (item) => {\r\n    dispatchCartAction({ type: \"ADD\", item: item });\r\n  };\r\n\r\n  const removeItemFromCartHandler = (id) => {\r\n    dispatchCartAction({ type: \"REMOVE\", id: id });\r\n  };\r\n  const cartContext = {\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: addItemToCartHandler,\r\n    removeItem: removeItemFromCartHandler,\r\n  };\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;\r\n"]},"metadata":{},"sourceType":"module"}